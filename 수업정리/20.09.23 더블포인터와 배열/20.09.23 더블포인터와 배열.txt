***********************************************************************
call by value 와 call by referance
이 둘의 차이점은 함수 파마미터에 포인터로 받냐 그냥 변수로 받냐의 차이
***********************************************************************


***********************************************************************
*p++ == *(p++)
(*p)++
++*p == ++(*p)
*++p == *(++p)
***********************************************************************


***********************************************************************
포인터 변구의 참조대상에 대한 const 선언
1. 별(*)이전에 const가 존재하는 경우(값을 고정하겠다!)
	const int * p;
	int const * p;
2. 별(*)이후에 const가 존재하는 경우(주소값을 고정하겠다!)
	int + const p;
3. 1번과 2번 동시에 사용가능(외부장치 건들때 사용)
***********************************************************************


***********************************************************************
2차원 배열 (결국 기다란 1차원 배열)
***********************************************************************


***********************************************************************
싱글포인터(*)와 더블포인터(**)
포인터가 2개일경우 3번째 포인터가 1번째 값을 알고싶을 때
즉,  A <- *P <- *K  에 상황일때 *K로 A의 값을 보고싶을때 **K를 쓴다
***********************************************************************


***********************************************************************
void connect(int *a, int **p) {
	*p = a;
}
main() {

	int a = 7;
	int* p = NULL;

	connect( &a, &p);

	printf("%d", *p);
}
***********************************************************************


***********************************************************************
포인트 배열 vs 배열 포인터 (차이는 단지 ()의 유무 )
포인트 배열 == 타입이름*변수명[N];
배열 포인터 == 타입이름 (*변수명)[N];
***********************************************************************


***********************************************************************
선언부		주소표현			포인터표현(주소를 받는메모)
1. int a		   &a			int *p, int p[], int p[1000]
2. int a[3]		   a, &a[0]		int *p int p[], int p[1000]
3. int a[2][3]	   a, &a[0], a[0], &a[0][0]	int (*p)[3], int *p, int p[][3], int p[1000][3]

4. int *a		   &a			int **p,  int *p[], int *p[1000]
5. int *a[3]	   a, &a[0]		int **p,  int *p[], int *p[1000]
선언할때		   fun(호출할때)		fun(받을때)
***********************************************************************


***********************************************************************
1차원이나 2차원이나? 같은개념
- a[0] == *(a+0) == *(a) == *a
- a[1] == *(a+1)
- a[2] == *(a+2)
***********************************************************************

***********************************************************************
a[0][2] == +(a[0]+2) == *(*(a+0)+2) == (*a)[2] == *(*a+2)
***********************************************************************











***********************************************************************
스터디 질문
char* ptr = "Hello World"; ==> 왜 이건 수정이 안되는 건가요?
**p 에서 *p는?
***********************************************************************